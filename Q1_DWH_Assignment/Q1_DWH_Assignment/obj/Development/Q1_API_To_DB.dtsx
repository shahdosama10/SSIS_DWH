<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/3/2024 2:23:30 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-7BSQ505"
  DTS:CreatorName="DESKTOP-7BSQ505\101"
  DTS:DTSID="{2C68B1A3-00A7-46A0-A8DA-C9319105A812}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5397.1"
  DTS:LocaleID="1033"
  DTS:ObjectName="Q1_API_To_DB"
  DTS:PackageType="5"
  DTS:VersionBuild="15"
  DTS:VersionGUID="{B256B97F-3890-41A1-97DD-6433866C7A17}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DESKTOP-7BSQ505.DW_Project]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{61793E88-C84C-4616-81D3-C4238E5125E9}"
      DTS:ObjectName="DESKTOP-7BSQ505.DW_Project">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=DESKTOP-7BSQ505;Initial Catalog=DW_Project;Provider=SQLOLEDB.1;Integrated Security=SSPI;Application Name=SSIS-Q1_API_To_DB-{61793E88-C84C-4616-81D3-C4238E5125E9}DESKTOP-7BSQ505.DW_Project;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\drop table if Exists and Create it"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{C7AA0860-C8D1-44C2-ABB2-CF4CE99FF276}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="drop table if Exists and Create it"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; Â© 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{61793E88-C84C-4616-81D3-C4238E5125E9}"
          SQLTask:SqlStatementSource="-- Drop the University table if it exists&#xA;IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'dbo.University') AND type in (N'U'))&#xA;BEGIN&#xA;    DROP TABLE dbo.University;&#xA;END&#xA;&#xA;-- Create the University table&#xA;CREATE TABLE dbo.University (&#xA;    name NVARCHAR(255),&#xA;    stateProvince NVARCHAR(255),&#xA;    domains NVARCHAR(MAX),&#xA;    webPages NVARCHAR(MAX),&#xA;    alpha_two_code NVARCHAR(2),&#xA;    country NVARCHAR(255)&#xA;);&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Run API"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{06ecd6e0-1802-4048-b885-c8ff1e6ed013}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Run API"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_7cc3d1098ac6497794e6e05ebbbbf7d0"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_e6395f8383c041d781af53f8726af924")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_e6395f8383c041d781af53f8726af924")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="packages.config"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="13.0.3" targetFramework="net472" />
</packages>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Net;
using Newtonsoft.Json;
#endregion

namespace ST_e6395f8383c041d781af53f8726af924
{

    public class University
    {

        [JsonProperty("name")]
        public string Name { get; set; }


        [JsonProperty("state-province")]
        public string StateProvince { get; set; }


        [JsonProperty("domains")]
        public List<string> Domains { get; set; }


        [JsonProperty("web_pages")]
        public List<string> WebPages { get; set; }


        [JsonProperty("alpha_two_code")]
        public string AlphaTwoCode { get; set; }

        [JsonProperty("country")]
        public string Country { get; set; }
    }

    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here

            try
            {
                ServicePointManager.Expect100Continue = true;
                ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;

                var json = "";
                using (WebClient wc = new WebClient())
                {
                    // it will download the json data from the given API url
                    json = wc.DownloadString("http://universities.hipolabs.com/search?country=United+States");
                }


                // it will convert the json data into the list of university objects
                List<University> universities = JsonConvert.DeserializeObject<List<University>>(json);


                // it will connect to the database
                string connectionString = @"Data Source=DESKTOP-7BSQ505;Initial Catalog=DW_Project;Integrated Security=True;";

                
                using (SqlConnection connection = new SqlConnection(connectionString))
                {
                    // Open the connection to the database
                    connection.Open();

                    foreach (var uni in universities)
                    {

                        // insert data into the database

                        string q = "INSERT INTO University (name, stateProvince, domains, webPages, alpha_two_code, country)" +
                                 " VALUES ('" + uni.Name + "', '" + uni.StateProvince + "', '" + string.Join(", ", uni.Domains) + "', '" + string.Join(", ", uni.WebPages) + "', '" + uni.AlphaTwoCode + "', '" + uni.Country + "')";

                        SqlCommand sqlCommand = new SqlCommand(q, connection); // it will execute the query

                        int rowsAffected = sqlCommand.ExecuteNonQuery();  // it will return the number of rows affected

                    }
                }
            }
            catch (Exception exception)
            {
                Console.WriteLine("An error occurred: " + exception.Message);
            }


            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e6395f8383c041d781af53f8726af924.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e6395f8383c041d781af53f8726af924.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e6395f8383c041d781af53f8726af924.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_e6395f8383c041d781af53f8726af924.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_e6395f8383c041d781af53f8726af924.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_7cc3d1098ac6497794e6e05ebbbbf7d0</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_7cc3d1098ac6497794e6e05ebbbbf7d0</msb:DisplayName>
    <msb:ProjectId>{7D264598-6979-451D-B96C-4001D71FE01E}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_7cc3d1098ac6497794e6e05ebbbbf7d0.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="packages.config" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e6395f8383c041d781af53f8726af924.Properties.Settings.get_Default():ST_e6395f8383c041d781af53f8726af924.Properties.Sett" +
    "ings")]

namespace ST_e6395f8383c041d781af53f8726af924.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="ST_7cc3d1098ac6497794e6e05ebbbbf7d0.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{D1B22550-8D66-46EA-B3A2-0E2CEA435362}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_e6395f8383c041d781af53f8726af924</RootNamespace>
    <AssemblyName>ST_7cc3d1098ac6497794e6e05ebbbbf7d0</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=13.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>C:\Users\101\AppData\Local\Temp\Vsta\SSIS_ST160\Vstat8SVHV1sFU__faWPNqHqhIw\packages\Newtonsoft.Json.13.0.3\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <BinaryItem
            Name="ST_7cc3d1098ac6497794e6e05ebbbbf7d0.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAP8gNGYAAAAAAAAAAOAAIiALATAAABoAAAAIAAAAAAAAJjgA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANQ3AABPAAAAAEAAAGwEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAALBgAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAGwEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAI
OAAAAAAAAEgAAAACAAUA6CIAADQUAAABAAAAAAAAABw3AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CewEAAAQqIgIDfQEAAAQqHgJ7AgAABCoiAgN9AgAABCoe
AnsDAAAEKiICA30DAAAEKh4CewQAAAQqIgIDfQQAAAQqHgJ7BQAABCoiAgN9BQAABCoeAnsGAAAE
KiICA30GAAAEKh4CKBEAAAoqAAAbMAUAVwEAAAEAABEXKBIAAAogAAwAACgTAAAKcgEAAHAKcxQA
AAoMCHIDAABwbxUAAAoK3goILAYIbxYAAArcBigBAAArC3J/AABwcxgAAAoNCW8ZAAAKB28aAAAK
EwQ4rQAAABIEKBsAAAoTBR8NjSMAAAElFnIiAQBwoiUXEQVvAQAABqIlGHLpAQBwoiUZEQVvAwAA
BqIlGnLpAQBwoiUbcvMBAHARBW8FAAAGKBwAAAqiJRxy6QEAcKIlHXLzAQBwEQVvBwAABigcAAAK
oiUecukBAHCiJR8JEQVvCQAABqIlHwpy6QEAcKIlHwsRBW8LAAAGoiUfDHL5AQBwoigdAAAKCXMe
AAAKbx8AAAomEgQoIAAACjpH////3g4SBP4WAgAAG28WAAAK3N4KCSwGCW8WAAAK3N4aEwZy/wEA
cBEGbyEAAAooIgAACigjAAAK3gACKCQAAAoWbyUAAAoqAEFkAAACAAAAHAAAAA4AAAAqAAAACgAA
AAAAAAACAAAAVAAAAMAAAAAUAQAADgAAAAAAAAACAAAARgAAAN4AAAAkAQAACgAAAAAAAAAAAAAA
AAAAADABAAAwAQAAGgAAABYAAAEeAigmAAAKKq5+BwAABC0ecicCAHDQBAAAAignAAAKbygAAApz
KQAACoAHAAAEfgcAAAQqGn4IAAAEKh4CgAgAAAQqGn4JAAAEKh4CKCoAAAoqLnMVAAAGgAkAAAQq
AABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACcBgAAI34AAAgHAAAgCAAAI1N0
cmluZ3MAAAAAKA8AAJwCAAAjVVMAxBEAABAAAAAjR1VJRAAAANQRAABgAgAAI0Jsb2IAAAAAAAAA
AgAAAVcdogkJCwAAAPoBMwAWAAABAAAAKwAAAAYAAAAMAAAAFgAAAAcAAAAqAAAAAgAAACgAAAAB
AAAAAwAAAAkAAAAQAAAAAgAAAAEAAAAFAAAAAQAAAAEAAAABAAAAAAADBQEAAAAAAAYAiwNTBgYA
GgRTBgYA1wJABg8AxwYAAAYABAOXBQYAbgOXBQYATwOXBQYAAQSXBQYAqwOXBQYAxAOXBQYAGwOX
BQYANgNqBAYAcAdABQYAnwJTBgYAMwCEAAoAOAThBQ4A3wOyBA4ATgKyBBIAnQd3BxYAtgWnBz8A
KAYAAAYAxAVABQYARwVABQYAugJABgYAAQZzBgYA8QWCBRIAigLtBBIA6wLtBBIAagJtBRIAEQZ3
BxIACQJ3BwYAtQFABQoAyQfhBRYAqQXOBQYAjARABQYAJQCEABYASAGnBxYAPgHOBQYA5QFABQ4A
2wSyBAYAGQJABQYAwQFABQYA4geXBQAAAABeAAAAAAABAAEAAQAQABMIOgA1AAEAAQABABAAXQU6
AEkABwAOAAAAEAB6BvAGNQAHABAAAAEQAB8H8AZ1AAkAFAADAQAAUAcAAF0ACgAXAAEA3ADgAAEA
nwDgAAEADAHjAAEA8gDjAAEAvgDgAAEAJQHgABEATAXqABEAPgLuABEAUwHyAAYGZwD2AFaAQAf5
AFaAHgL5AFAgAAAAAIYI7QGPAAEAWCAAAAAAhgj2ARAAAQBhIAAAAACGCGMBjwACAGkgAAAAAIYI
dQEQAAIAciAAAAAAhggoB/0AAwB6IAAAAACGCDQHBQEDAIMgAAAAAIYI1gb9AAQAiyAAAAAAhgjj
BgUBBACUIAAAAACGCIcBjwAFAJwgAAAAAIYImAEQAAUApSAAAAAAhgj7B48ABgCtIAAAAACGCAcI
EAAGALYgAAAAAIYYMwYGAAcAwCAAAAAAhgBjBQYABwCIIgAAAACGGDMGBgAHALYgAAAAAIMYMwYG
AAcAkCIAAAAAkwj9BQ4BBwC8IgAAAACTCCYCEwEHAMMiAAAAAJMIMgIYAQcAyyIAAAAAlgiCBx4B
CADSIgAAAACGGDMGBgAIANoiAAAAAJEYOQYjAQgAAAABAE4EAAABAE4EAAABAE4EAAABAE4EAAAB
AE4EAAABAE4EAAABAE4ECQAzBgEAEQAzBgYAGQAzBgoAKQAzBhAAMQAzBhAAOQAzBhAAQQAzBhAA
SQAzBhAAUQAzBhAAWQAzBhAAYQAzBhAAcQAzBgYAgQAzBhAAiQAzBgYAwQAzBgYA4QAzBhUAaQAz
BgYA8QBUBDMA8QArBTgAmQAzBgYAmQCEBD4AAQGCAgYACQFlB0MAoQAzBhAAEQFYBQYADAAlBloA
FAC9B2oAGQFoBW8AGQFeB3oAKQEzBoAAMQHrB4cAFADVB4sAsQCpAY8AGQFeB5MAOQH/AZkAkQBI
B54AQQGOBwEAkQAzBgYASQHTAaQASQHeB60AyQAzBrMA6QAzBgYACAAsANYACAAwANsAIABjANsA
IQBjANsAKQBrAAMCLgALAEIBLgATAEsBLgAbAGoBLgAjAHMBLgArAJwBLgAzAJwBLgA7AJwBLgBD
AHMBLgBLAKIBLgBTAJwBLgBbALkBQABjANsAQQBjANsASQBrAA0CYABjANsAYQBjANsAYwBzANsA
aQBrACECgABjANsAgQBjANsAgwB7ANsAiQBrAC4CoABjANsAoQBjANsAqQBrAD0CwABjANsAwQBj
ANsAyQBrAFEC4ABjANsA6QCDAGoBAAFjANsACQGDAGoBIAFjANsAIQFjANsAQAFjANsAYAFjANsA
gAFjANsAGwACAAEABAAHAAUACQAAAPoBJwEAAHkBJwEAADgHKwEAAOcGKwEAAJwBJwEAAAsIJwEA
AAEGMwEAAEYCOAEAAIYHPQECAAEAAwABAAIAAwACAAMABQABAAQABQACAAUABwABAAYABwACAAcA
CQABAAgACQACAAkACwABAAoACwACAAsADQABAAwADQACABEADwACABIAEQABABMAEQACABQAEwBT
AGMABIAAAAEAAAC5IhcRAAAAAAAAAQAAAAQAAAAAAAAAAAAAALsAewAAAAAADQAAAAAAAAAAAAAA
xADhBQAAAAAQAAAAAAAAAAAAAADNAJMEAAAAAAQAAAAAAAAAAAAAALsAQAUAAAAABAAAAAAAAAAA
AAAAuwBvAAAAAAAAAAAAAQAAAIQGAAAGAAMALwBKAAAAAAAAU1RfN2NjM2QxMDk4YWM2NDk3Nzk0
ZTZlMDVlYmJiYmY3ZDAASUVudW1lcmFibGVgMQBMaXN0YDEAU1RfZTYzOTVmODM4M2MwNDFkNzgx
YWY1M2Y4NzI2YWY5MjQAPE1vZHVsZT4AdmFsdWVfXwBTeXN0ZW0uRGF0YQBtc2NvcmxpYgBTeXN0
ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwA8U3RhdGVQcm92aW5jZT5rX19CYWNraW5nRmllbGQAPEFs
cGhhVHdvQ29kZT5rX19CYWNraW5nRmllbGQAPE5hbWU+a19fQmFja2luZ0ZpZWxkADxXZWJQYWdl
cz5rX19CYWNraW5nRmllbGQAPERvbWFpbnM+a19fQmFja2luZ0ZpZWxkADxDb3VudHJ5PmtfX0Jh
Y2tpbmdGaWVsZABEYkNvbW1hbmQAU3FsQ29tbWFuZABkZWZhdWx0SW5zdGFuY2UAZ2V0X1N0YXRl
UHJvdmluY2UAc2V0X1N0YXRlUHJvdmluY2UAZ2V0X0FscGhhVHdvQ29kZQBzZXRfQWxwaGFUd29D
b2RlAGdldF9NZXNzYWdlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9t
SGFuZGxlAENvbnNvbGUAZ2V0X05hbWUAc2V0X05hbWUAV3JpdGVMaW5lAFNlY3VyaXR5UHJvdG9j
b2xUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZT
VEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBEaXNwb3Nl
AEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2Vy
Tm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVB
dHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0
ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRl
AEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJp
YnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUA
U1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0
ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBKc29uUHJvcGVydHlBdHRyaWJ1dGUAdmFs
dWUAc2V0X0V4cGVjdDEwMENvbnRpbnVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcARG93bmxv
YWRTdHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVu
dE1vZGVsAFNUXzdjYzNkMTA5OGFjNjQ5Nzc5NGU2ZTA1ZWJiYmJmN2QwLmRsbABzZXRfU2VjdXJp
dHlQcm90b2NvbABTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBPcGVuAFNjcmlwdE1haW4ASm9pbgBT
eXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlv
bgBEYkNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBFeGNlcHRpb24AU3lzdGVtLkRhdGEuQ29tbW9u
AE5ld3RvbnNvZnQuSnNvbgBDdWx0dXJlSW5mbwBnZXRfUmVzb3VyY2VNYW5hZ2VyAFNlcnZpY2VQ
b2ludE1hbmFnZXIAR2V0RW51bWVyYXRvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNz
AFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF9lNjM5
NWY4MzgzYzA0MWQ3ODFhZjUzZjg3MjZhZjkyNC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJj
ZXMARGVidWdnaW5nTW9kZXMAZ2V0X1dlYlBhZ2VzAHNldF9XZWJQYWdlcwBTVF9lNjM5NWY4Mzgz
YzA0MWQ3ODFhZjUzZjg3MjZhZjkyNC5Qcm9wZXJ0aWVzAFNldHRpbmdzAGdldF9Eb21haW5zAHNl
dF9Eb21haW5zAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAENvbmNhdABEZXNlcmlhbGl6
ZU9iamVjdABTeXN0ZW0uTmV0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AFdlYkNsaWVudABT
eXN0ZW0uRGF0YS5TcWxDbGllbnQAZ2V0X0N1cnJlbnQASnNvbkNvbnZlcnQATW92ZU5leHQAZ2V0
X0Fzc2VtYmx5AEV4ZWN1dGVOb25RdWVyeQBnZXRfQ291bnRyeQBzZXRfQ291bnRyeQBVbml2ZXJz
aXR5AAAAAAEAe2gAdAB0AHAAOgAvAC8AdQBuAGkAdgBlAHIAcwBpAHQAaQBlAHMALgBoAGkAcABv
AGwAYQBiAHMALgBjAG8AbQAvAHMAZQBhAHIAYwBoAD8AYwBvAHUAbgB0AHIAeQA9AFUAbgBpAHQA
ZQBkACsAUwB0AGEAdABlAHMAAIChRABhAHQAYQAgAFMAbwB1AHIAYwBlAD0ARABFAFMASwBUAE8A
UAAtADcAQgBTAFEANQAwADUAOwBJAG4AaQB0AGkAYQBsACAAQwBhAHQAYQBsAG8AZwA9AEQAVwBf
AFAAcgBvAGoAZQBjAHQAOwBJAG4AdABlAGcAcgBhAHQAZQBkACAAUwBlAGMAdQByAGkAdAB5AD0A
VAByAHUAZQA7AAGAxUkATgBTAEUAUgBUACAASQBOAFQATwAgAFUAbgBpAHYAZQByAHMAaQB0AHkA
IAAoAG4AYQBtAGUALAAgAHMAdABhAHQAZQBQAHIAbwB2AGkAbgBjAGUALAAgAGQAbwBtAGEAaQBu
AHMALAAgAHcAZQBiAFAAYQBnAGUAcwAsACAAYQBsAHAAaABhAF8AdAB3AG8AXwBjAG8AZABlACwA
IABjAG8AdQBuAHQAcgB5ACkAIABWAEEATABVAEUAUwAgACgAJwABCScALAAgACcAAQUsACAAAAUn
ACkAASdBAG4AIABlAHIAcgBvAHIAIABvAGMAYwB1AHIAcgBlAGQAOgAgAABxUwBUAF8AZQA2ADMA
OQA1AGYAOAAzADgAMwBjADAANAAxAGQANwA4ADEAYQBmADUAMwBmADgANwAyADYAYQBmADkAMgA0
AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAADZESOTVJ7HSaoB
7yiNzJKGAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFtFwcHDhUSPQESCBJNElEVEVUBEggSCBJZ
BAABAQIFAAEBEX0EIAEODgYQAQEeAA4ICgEVEj0BEggGFRI9ARIICCAAFRFVARMABhURVQESCAQg
ABMACgACDg4VEoCRAQ4FAAEOHQ4GIAIBDhJRAyAACAMgAAIDIAAOBQACDg4OBAABAQ4FIAASgKEI
AAESgKURgKkFIAASgK0HIAIBDhKArQi3elxWGTTgiQgwrU/msqau7QiJhF3NgIDMkQQAAAAABAEA
AAACBg4GBhUSPQEOAwYSZQMGEmkDBhIUAgYIAwYRGAcgABUSPQEOCCABARUSPQEOBAAAEmUEAAAS
aQUAAQESaQQAABIUAwAAAQMoAA4HKAAVEj0BDgQIABJlBAgAEmkECAASFAgBAAgAAAAAAB4BAAEA
VAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfZTYzOTVmODM4M2MwNDFk
NzgxYWY1M2Y4NzI2YWY5MjQAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyNAAASQEAGi5ORVRG
cmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1l
d29yayA0LjcJAQAEbmFtZQAAEwEADnN0YXRlLXByb3ZpbmNlAAAMAQAHZG9tYWlucwAADgEACXdl
Yl9wYWdlcwAAEwEADmFscGhhX3R3b19jb2RlAAAMAQAHY291bnRyeQAAAAC0AAAAzsrvvgEAAACR
AAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQu
MC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNT
eXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA
/DcAAAAAAAAAAAAAFjgAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAg4AAAAAAAAAAAAAAAAX0Nv
ckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAAAQBAAAAAAAAAAAAAAQBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAFxG5IgAAAQAXEbkiPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEcAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAATAMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AFQAXwBlADYAMwA5ADUAZgA4ADMAOAAzAGMAMAA0ADEAZAA3ADgAMQBhAGYANQAzAGYAOAA3ADIA
NgBhAGYAOQAyADQAAAA8AA4AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AOAA4
ADgAOQAuADQAMwA3ADUAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADcA
YwBjADMAZAAxADAAOQA4AGEAYwA2ADQAOQA3ADcAOQA0AGUANgBlADAANQBlAGIAYgBiAGIAZgA3
AGQAMAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAA
eQByAGkAZwBoAHQAIABAACAAIAAyADAAMgA0AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBt
AGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAA
UwBUAF8ANwBjAGMAMwBkADEAMAA5ADgAYQBjADYANAA5ADcANwA5ADQAZQA2AGUAMAA1AGUAYgBi
AGIAYgBmADcAZAAwAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMA
VABfAGUANgAzADkANQBmADgAMwA4ADMAYwAwADQAMQBkADcAOAAxAGEAZgA1ADMAZgA4ADcAMgA2
AGEAZgA5ADIANAAAAEAADgABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4A
OAA4ADgAOQAuADQAMwA3ADUAAABEAA4AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBu
AAAAMQAuADAALgA4ADgAOAA5AC4ANAAzADcANQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAKDgAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{7D38E924-E836-44E2-A034-35759EC545ED}"
      DTS:From="Package\drop table if Exists and Create it"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Run API" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="234.4,48.8"
          Id="Package\drop table if Exists and Create it"
          TopLeft="289.166650867297,60.2666663532787" />
        <NodeLayout
          Size="116.8,41.6"
          Id="Package\Run API"
          TopLeft="628.333302280971,59.2666660097568" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="523.566650867297,82.3666661815177">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="104.766651413674,0"
              Start="0,0"
              End="97.2666514136737,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="97.2666514136737,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>